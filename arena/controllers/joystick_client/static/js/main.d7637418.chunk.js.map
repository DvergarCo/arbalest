{"version":3,"sources":["Joystick.js","TankControl.js","SimpleButton.js","App.js","index.js"],"names":["JoyStick","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nippleRef","React","createRef","manager","nipplejs","create","mode","maxNumberOfNipples","color","zone","current","listener","react_default","a","createElement","ref","style","joyStyle","Component","flex","background","borderRadius","TankContorl","left","right","onTouchLeft","e","onTouch","onTouchRight","side","bounds","target","getBoundingClientRect","touch","targetTouches","x","clientX","l","r","height","bottom","top","pos","Math","max","min","clientY","onTouchEndLeft","onTouchEnd","onTouchEndRight","leftRef","container","onTouchStart","onTouchMove","onToucRight","display","margin","SimpleButton","_ref","onClick","isOn","text","SEND_INTERVAL","RECONNECT_TIMEOUT","robots","document","body","App","state","status","robotId","tankControls","sender","connecter","connect","conn","WebSocket","window","location","hostname","onopen","setState","clearTimeout","setInterval","sendDirection","onclose","clearInterval","setTimeout","onerror","_assertThisInitialize","assertThisInitialized","send","concat","joystickListener","on","stick","angle","radian","force","forward","sin","turn","cos","tankListener","onRobotSelection","onTankControlPress","onJoystickControlPress","_this2","_this$state","mainContainer","menuStyle","map","id","src_SimpleButton","key","joystickContainer","TankControl","Joystick","statusContainer","statusText","flexDirection","position","width","boxSizing","padding","fontSize","textAlign","marginLeft","marginRight","flexWrap","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.d7637418.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport nipplejs from \"nipplejs\";\n\nclass JoyStick extends Component {\n  constructor(props) {\n    super(props);\n    this.nippleRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.manager = nipplejs.create({\n      mode: \"dynamic\",\n      maxNumberOfNipples: 1,\n      color: \"#fff\",\n      zone: this.nippleRef.current\n    });\n    this.props.listener(this.manager);\n  }\n\n  render() {\n    return <div ref={this.nippleRef} style={joyStyle} />;\n  }\n}\n\nconst joyStyle = {\n  flex: 1,\n  background: \"#000\",\n  borderRadius: \"12px\"\n};\n\nexport default JoyStick;\n","import React, { Component } from \"react\";\n\nclass TankContorl extends Component {\n  left = 0;\n  right = 0;\n\n  constructor(props) {\n    super(props);\n    this.leftRef = React.createRef();\n  }\n\n  onTouchLeft = e => this.onTouch(e, \"left\");\n  onTouchRight = e => this.onTouch(e, \"right\");\n\n  onTouch = (e, side) => {\n    const bounds = e.target.getBoundingClientRect();\n\n    const touch = e.targetTouches[0];\n\n    const x = touch.clientX;\n    const l = bounds.left;\n    const r = bounds.right;\n\n    if (x >= l && x <= r) {\n      const height = bounds.bottom - bounds.top;\n      const pos = Math.max(\n        Math.min(((bounds.top - touch.clientY) / height + 0.5) * 2, 1),\n        -1\n      );\n      this[side] = pos;\n    }\n\n    this.props.listener({ left: this.left, right: this.right });\n  };\n\n  onTouchEndLeft = () => this.onTouchEnd(\"left\");\n  onTouchEndRight = () => this.onTouchEnd(\"right\");\n\n  onTouchEnd = side => {\n    this[side] = 0;\n    this.props.listener({ left: this.left, right: this.right });\n  };\n\n  render() {\n    return (\n      <div style={container}>\n        <div\n          onTouchStart={this.onTouchLeft}\n          onTouchMove={this.onTouchLeft}\n          onTouchEnd={this.onTouchEndLeft}\n          ref={this.leftRef}\n          style={joyStyle}\n        />\n        <div\n          onTouchStart={this.onToucRight}\n          onTouchMove={this.onTouchRight}\n          onTouchEnd={this.onTouchEndRight}\n          ref={this.leftRef}\n          style={joyStyle}\n        />\n      </div>\n    );\n  }\n}\n\nconst container = {\n  flex: 1,\n  display: \"flex\"\n};\n\nconst joyStyle = {\n  flex: 1,\n  background: \"#000\",\n  borderRadius: \"12px\",\n  margin: \"5px\"\n};\n\nexport default TankContorl;\n","import React from \"react\";\n\nconst SimpleButton = ({ onClick, isOn, text }) => (\n  <button\n    onClick={onClick}\n    style={{\n      flex: 1,\n      color: isOn ? \"red\" : \"black\"\n    }}\n  >\n    {text}\n  </button>\n);\n\nexport default SimpleButton;\n","import React, { Component } from \"react\";\nimport JoyStick from \"./Joystick\";\nimport TankContorl from \"./TankControl\";\nimport SimpleButton from \"./SimpleButton\";\n\n// keep constant sending speed for webots\n// webots lags, if interval is too high\nconst SEND_INTERVAL = 150;\nconst RECONNECT_TIMEOUT = 5000;\n\nconst robots = [0, 1, 2, 3];\n\ndocument.body.style.margin = \"0px\";\n\nclass App extends Component {\n  state = {\n    status: \"connecting\",\n    robotId: robots[0],\n    tankControls: true\n  };\n\n  left = 0;\n  right = 0;\n  sender = null;\n  connecter = null;\n\n  componentDidMount() {\n    this.connect();\n  }\n\n  connect = () => {\n    this.conn = new WebSocket(\"ws://\" + window.location.hostname + \":9000\");\n\n    this.conn.onopen = () => {\n      this.setState({ status: \"connected\" });\n      clearTimeout(this.connecter);\n      this.sender = setInterval(this.sendDirection, SEND_INTERVAL);\n    };\n\n    this.conn.onclose = () => {\n      this.setState({ status: \"closed\" });\n      clearInterval(this.sender);\n      this.connecter = setTimeout(this.connect, RECONNECT_TIMEOUT);\n    };\n\n    this.conn.onerror = e => {\n      this.setState({ status: \"error\" });\n      clearInterval(this.sender);\n      this.connecter = setTimeout(this.connect, RECONNECT_TIMEOUT);\n    };\n  };\n\n  sendDirection = () => {\n    const { robotId } = this.state;\n    const { left, right } = this;\n    if (this.conn) this.conn.send(`${robotId}:${left}|${right}`);\n  };\n\n  joystickListener = manager => {\n    manager.on(\"move\", (e, stick) => {\n      if (stick.angle) {\n        const angle = stick.angle.radian;\n        const force = Math.min(stick.force, 1);\n        const forward = Math.sin(angle);\n        const turn = Math.cos(angle);\n\n        this.right = Math.min(0.8 * forward - 0.6 * turn, 1);\n        this.left = Math.min(force * (0.8 * forward + 0.6 * turn), 1);\n      }\n    });\n    manager.on(\"end\", () => {\n      this.left = 0;\n      this.right = 0;\n    });\n  };\n\n  tankListener = ({ left, right }) => {\n    this.left = left;\n    this.right = right;\n  };\n\n  onRobotSelection = robotId => {\n    this.setState({ robotId });\n  };\n\n  onTankControlPress = () => {\n    this.setState({ tankControls: true });\n  };\n\n  onJoystickControlPress = () => {\n    this.setState({ tankControls: false });\n  };\n\n  render() {\n    const { status, robotId, tankControls } = this.state;\n\n    return (\n      <div style={mainContainer}>\n        <div style={menuStyle}>\n          {robots.map(id => (\n            <SimpleButton\n              onClick={() => this.onRobotSelection(id)}\n              key={id}\n              isOn={id === robotId}\n              text={`Robot ${id}`}\n            />\n          ))}\n          <SimpleButton\n            onClick={this.onTankControlPress}\n            isOn={tankControls}\n            text=\"Tank\"\n          />\n          <SimpleButton\n            onClick={this.onJoystickControlPress}\n            isOn={!tankControls}\n            text=\"Joystick\"\n          />\n        </div>\n        <div style={joystickContainer}>\n          {status === \"connected\" ? (\n            tankControls ? (\n              <TankContorl listener={this.tankListener} />\n            ) : (\n              <JoyStick listener={this.joystickListener} />\n            )\n          ) : (\n            <div style={statusContainer}>\n              <div style={statusText}>{status}</div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mainContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"relative\",\n  width: \"100%\",\n  height: \"100vh\",\n  boxSizing: \"border-box\",\n  padding: \"0.5em\"\n};\n\nconst statusText = {\n  flex: 1,\n  fontSize: 12,\n  textAlign: \"center\",\n  margin: \"auto\"\n};\n\nconst statusContainer = {\n  flex: 1,\n  display: \"flex\",\n  marginLeft: \"1em\",\n  marginRight: \"1em\"\n};\n\nconst joystickContainer = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  position: \"relative\"\n};\n\nconst menuStyle = {\n  flex: 0,\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  margin: \"0.5em\",\n  background: \"#fff\"\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}